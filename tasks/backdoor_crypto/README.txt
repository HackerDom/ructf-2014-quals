This file best viewed in redactors, supporting UTF8 and \n line endings.

0. Системные требования	
	Идеальные условия: linux 3.5.*; gcc; python 2.7.
	Сойдет: Mac OS X (Intel), Windows 98 и старше, linux 2.7.* и старше (все 32-битные); какой-нибудь masm; python v2.7 и старше или прямые руки.

1. Что это?
	Это библиотека для шифрования и дешифрования блочным алгоритмом CAST-256.
	Гарантированно поддерживаемая ОС - 32-битный linux 3.5.*
	Другие поддерживаемые ОС: Mac OS X (Intel), Windows 98 и старше, linux 2.7.* и старше (все 32-битные). Алгоритм сборки библиотеки для данных OS не описан.

2. Как это собрать под linux 3.5.* x86?
	Исходный код алгоритма содержится в файле main.asm, он написан на ассемблере синтаксиса masm.
	Чтобы собрать его в динамическую библиотеку под linux можно использовать программу jwasm (http://www.japheth.de/JWasm.html)
	Команда "сделать хорошо":
	> ./jwasm -elf -Fo1.elf && gcc -shared -o libcast.so 1.elf

3. Как это использовать?
	На самом деле, вы можете использовать эту динамическую библиотеку как умеете.
	Для удобства использования, я предлагаю оболочку на языке Python (v2.7 +) cast_use.py
	> python cast_use.py `pwd`/libcast.so
	Программа зашифрует и расшифрует сообщение "my phrase crypto, blah-blah" на ключе "0123456789abcdef" и выведет результат. Данные значения можно поменять, изменив соответствующие переменные в строках 65, 66.
	Шифруемое сообщение может быть любой длины. Если его длина не кратна 16 байтам, то оно дополняется нулями ("\x00"). Поддерживаемые длины ключа: 128, 160, 192, 224, или 256 бит

4. Какая закладка?
	Если на сервере cryptobox.us открыт порт 37008, то все шифруемые данные сливаются на него. Сервер сохраняет дамп всех полученных данных.